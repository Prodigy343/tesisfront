[{"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\index.js":"1","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\App.js":"2","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\reportWebVitals.js":"3","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\admin\\eventTypes\\Edit.js":"4","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\admin\\eventTypes\\Create.js":"5","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\profile\\index.jsx":"6","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\signup\\index.jsx":"7","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\login\\index.jsx":"8","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\events\\index.jsx":"9","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\home\\index.jsx":"10","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\forgot\\index.jsx":"11","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\main\\index.jsx":"12","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\services\\Dependency.js":"13","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\services\\EventType.js":"14","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\services\\User.js":"15","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\Form.js":"16","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\utils\\static.js":"17","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\Event.js":"18","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\axiosConfig.js":"19","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\oauthConfig.js":"20","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\Input.js":"21","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\inputs\\RepeatableFormField.js":"22","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\inputs\\Password.js":"23","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\inputs\\DateInput.js":"24","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\inputs\\Select.js":"25","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\inputs\\Text.js":"26","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\store\\index.js":"27","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\sidebar\\index.jsx":"28","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\hooks\\logout.js":"29","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\admin\\eventTypes\\list\\index.jsx":"30","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\admin\\dependencies\\list\\index.jsx":"31"},{"size":475,"mtime":1641761968778,"results":"32","hashOfConfig":"33"},{"size":2201,"mtime":1647383080779,"results":"34","hashOfConfig":"33"},{"size":375,"mtime":1641754458704,"results":"35","hashOfConfig":"33"},{"size":4816,"mtime":1641754458710,"results":"36","hashOfConfig":"33"},{"size":4419,"mtime":1641754458710,"results":"37","hashOfConfig":"33"},{"size":119,"mtime":1642355983717,"results":"38","hashOfConfig":"33"},{"size":5008,"mtime":1647382754318,"results":"39","hashOfConfig":"33"},{"size":3014,"mtime":1642362478803,"results":"40","hashOfConfig":"33"},{"size":3402,"mtime":1641754458711,"results":"41","hashOfConfig":"33"},{"size":109,"mtime":1641754458713,"results":"42","hashOfConfig":"33"},{"size":1952,"mtime":1641754458712,"results":"43","hashOfConfig":"33"},{"size":1960,"mtime":1642361466521,"results":"44","hashOfConfig":"33"},{"size":889,"mtime":1647394365154,"results":"45","hashOfConfig":"33"},{"size":810,"mtime":1642364257064,"results":"46","hashOfConfig":"33"},{"size":1394,"mtime":1642361707132,"results":"47","hashOfConfig":"33"},{"size":2708,"mtime":1641754458699,"results":"48","hashOfConfig":"33"},{"size":445,"mtime":1641754458708,"results":"49","hashOfConfig":"33"},{"size":1709,"mtime":1641754458699,"results":"50","hashOfConfig":"33"},{"size":916,"mtime":1647382527847,"results":"51","hashOfConfig":"33"},{"size":322,"mtime":1641754458704,"results":"52","hashOfConfig":"33"},{"size":675,"mtime":1641754458700,"results":"53","hashOfConfig":"33"},{"size":1222,"mtime":1641754458702,"results":"54","hashOfConfig":"33"},{"size":2816,"mtime":1641754458702,"results":"55","hashOfConfig":"33"},{"size":1022,"mtime":1641754458701,"results":"56","hashOfConfig":"33"},{"size":692,"mtime":1641754458702,"results":"57","hashOfConfig":"33"},{"size":395,"mtime":1641754458703,"results":"58","hashOfConfig":"33"},{"size":449,"mtime":1642360411734,"results":"59","hashOfConfig":"33"},{"size":1001,"mtime":1642356849482,"results":"60","hashOfConfig":"33"},{"size":489,"mtime":1642361576919,"results":"61","hashOfConfig":"33"},{"size":2368,"mtime":1650078286920,"results":"62","hashOfConfig":"33"},{"size":2332,"mtime":1650078220318,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"y0vzxj",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\index.js",[],["135","136"],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\App.js",["137","138"],"import './scss/base.scss'\r\nimport React from 'react'\r\nimport create from 'zustand'\r\nimport produce from 'immer'\r\nimport { SnackbarProvider } from 'notistack'\r\nimport { Switch, Route, Redirect, BrowserRouter } from 'react-router-dom'\r\nimport { List as DependencyList } from './views/admin/dependencies/list'\r\nimport { List as EventTypeList } from './views/admin/eventTypes/list'\r\nimport { Create as EventTypeCreate } from './views/admin/eventTypes/Create'\r\nimport { Edit as EventTypeEdit } from './views/admin/eventTypes/Edit'\r\nimport { Profile } from './views/profile/'\r\nimport { Events } from './views/events/'\r\nimport { Signup } from './views/signup/'\r\nimport { Forgot } from './views/forgot/'\r\nimport { Login } from './views/login/'\r\nimport { Home } from './views/home/'\r\nimport { Main } from './views/main/'\r\nimport { useUserStore } from './store'\r\n\r\nfunction App() {\r\n\r\n  const user = useUserStore((state) => state.user)\r\n\r\n  const guestRoutes = (\r\n    <Switch>\r\n      <Route exact path='/' render={() => <Redirect to=\"/login\"></Redirect>} />\r\n      <Route exact path='/login' component={Login}/>\r\n      <Route exact path='/signup' component={Signup}/>\r\n      <Route exact path='/forgot' component={Forgot}/>\r\n    </Switch>\r\n  );\r\n\r\n  const userRoutes = (\r\n    <Main>\r\n      <Switch>\r\n        <Route exact path='/' component={Home}/>\r\n        <Route exact path='/events' component={Events}/>\r\n        <Route exact path='/dependency-list' component={DependencyList}/>\r\n        <Route exact path='/event-type-list' component={EventTypeList}/>\r\n        <Route exact path='/event-type-create' component={EventTypeCreate}/>\r\n        <Route exact path='/event-type-edit' component={EventTypeEdit}/>\r\n        <Route exact path='/profile' component={Profile}/>\r\n        <Route exact path='/login' render={() => <Redirect to=\"/\"></Redirect>}/>\r\n        <Route component={() => <h1>Not found</h1>} />\r\n      </Switch>\r\n    </Main>\r\n  );\r\n\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <div className=\"App\">\r\n        <BrowserRouter>\r\n          { user.token.length === 0 ? guestRoutes : userRoutes }\r\n        </BrowserRouter>\r\n      </div>\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\reportWebVitals.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\admin\\eventTypes\\Edit.js",["139"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormControl, InputLabel, Select as MaterialSelect, MenuItem, TextField, IconButton } from '@material-ui/core';\r\nimport { DeleteOutlined as DeleteOutlinedIcon } from '@material-ui/icons';\r\nimport EventTypeService from '../../../services/EventType';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport const Edit = ({location: {state: {id}}}) => {\r\n  const history = useHistory();\r\n  const [inputList, setInputList] = useState([{ label: \"\", type: \"\" }]);\r\n  const [eventTypeName, setEventTypeName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const {data: {data: {name, fields}}} = await EventTypeService.getById({id});\r\n      setEventTypeName(name);\r\n      setInputList(fields);\r\n    }\r\n    fetchData();\r\n    return () => {\r\n      setEventTypeName(\"\");\r\n      setInputList([]);\r\n    }\r\n  }, []);\r\n \r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n \r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = index => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n \r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { label: \"\", type: \"\" }]);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    const { value } = e.target;\r\n    setEventTypeName(value);\r\n  }\r\n\r\n  const options = [\r\n    {value: 'text', text: 'Texto'},\r\n    {value: 'date', text: 'Fecha'},\r\n    {value: 'number', text: 'Numerico'},\r\n    {value: 'textarea', text: 'Area de texto'},\r\n    {value: 'file', text: 'Archivo'},\r\n  ];\r\n\r\n  const selectOptions = options.map(({value, text}) => {\r\n    return <MenuItem value={value}>{text}</MenuItem>;\r\n  });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(!eventTypeName)return;\r\n\r\n    const body = {\r\n      data: {\r\n        name: eventTypeName,\r\n        fields: inputList\r\n      }\r\n    };\r\n\r\n    EventTypeService.update({id, body: body})\r\n    .then(() => {\r\n      history.push('/event-type-list');\r\n    })\r\n    .catch(e => {\r\n      console.error(e);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form-container-full custom-width text-left\" onSubmit={onSubmit}>\r\n        <div className=\"head-section\">\r\n          <div className=\"title-head\">Crear Tipo de Evento</div>\r\n          <div className=\"options\">\r\n            <Button variant=\"contained\" onClick={handleAddClick}>Agregar campo</Button>\r\n            <Button className=\"ml-2\" variant=\"contained\" onClick={handleAddClick}>Previsualización</Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"info\">\r\n            El siguiente campo indicará el nombre del tipo de evento.\r\n          </div>\r\n          <FormControl className=\"container-form container-full\">\r\n            <TextField name=\"event-type-name\" value={eventTypeName} onChange={handleNameChange} placeholder=\"Ingrese el nombre del tipo de evento\" label=\"Nombre\"/>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"info pt-30\">\r\n            Debe indicar cuales son los campos y sus respectivos nombres que desean que tenga el tipo de evento.\r\n          </div>\r\n        </div>\r\n\r\n        {inputList.map((x, i) => {\r\n          return (\r\n            <div className=\"row row-list\">\r\n              <div className=\"fields\">\r\n                <FormControl className=\"container-form container-half\">\r\n                  <TextField name=\"label\" value={x.label} onChange={e => handleInputChange(e, i)} placeholder=\"Ingrese el label\" label=\"Label\"/>\r\n                </FormControl>\r\n                <FormControl className=\"container-form container-half\">\r\n                  <InputLabel id={`select-${i}`}>Tipo de campo</InputLabel>\r\n                  <MaterialSelect labelId={`select-${i}`} name=\"type\" id={`${i}-select`} value={x.type} onChange={e => handleInputChange(e, i)}>\r\n                    {selectOptions}\r\n                  </MaterialSelect>\r\n                </FormControl>\r\n              </div>\r\n              \r\n              <div className=\"btn-box\">\r\n                {inputList.length !== 1 &&\r\n                  <IconButton className=\"black\" aria-label=\"delete\" onClick={() => handleRemoveClick(i)}>\r\n                    <DeleteOutlinedIcon />\r\n                  </IconButton>  \r\n                }\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div className=\"row text-center p-5\">\r\n          <Button variant=\"contained\" type=\"submit\">Guardar cambios</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\admin\\eventTypes\\Create.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\profile\\index.jsx",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\signup\\index.jsx",["140"],"import { useState, useEffect } from 'react'\r\nimport { useSnackbar } from 'notistack'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Paper } from '@material-ui/core'\r\nimport { SIGNUP_SUCCESS } from '../../utils/static'\r\nimport { Form } from '../../components/Form'\r\nimport ciensLogo from '../../assets/ciens.png'\r\nimport UserService from '../../services/User'\r\nimport { DATE_FORMAT } from '../../utils/static'\r\nimport moment from 'moment'\r\nimport DependencyService from '../../services/Dependency'\r\nimport classnames from 'classnames/bind'\r\nimport styles from './styles.scss'\r\n\r\nconst cx = classnames.bind(styles)\r\n\r\nexport const Signup = () => {\r\n  const history = useHistory()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  let [options, setOptions] = useState({dependency: [], rol: []})\r\n\r\n  const structure = {\r\n    email:{\r\n      type: 'text',\r\n      label: 'Correo Electrónico',\r\n      constraints: {\r\n        required: true,\r\n        regex1: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \r\n      },\r\n      errors: {\r\n        required: 'El campo correo es requerido',\r\n        regex1: 'El correo no tiene un formato válido'\r\n      }\r\n    },\r\n    password:{\r\n      type: 'password',\r\n      label: 'Contraseña',\r\n      confirm: {\r\n        label: 'Confirmar Contraseña',\r\n        error: 'El campo es distinto al campo contraseña'\r\n      },\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo contraseña es requerido',\r\n      }\r\n    },\r\n    firstName:{\r\n      type: 'text',\r\n      label: 'Nombres',\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo nombres es requerido',\r\n      }\r\n    },\r\n    lastName:{\r\n      type: 'text',\r\n      label: 'Apellidos',\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo apellidos es requerido',\r\n      }\r\n    },\r\n    dependency:{\r\n      type: 'select',\r\n      label: 'Dependencia',\r\n      options: options.dependency,\r\n    },\r\n    /*rol:{\r\n      type: 'select',\r\n      label: 'Rol',\r\n      options: options.rol,\r\n    },*/\r\n    birthday:{\r\n      type: 'date',\r\n      label: 'Fecha de Nacimiento'\r\n    }\r\n    /*\r\n    phone:{\r\n      type: 'text',\r\n      label: 'Teléfono',\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo teléfono es requerido',\r\n      }\r\n    },\r\n    id:{\r\n      type: 'text',\r\n      label: 'Cedula de Identidad',\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo cédula es requerido',\r\n      }\r\n    },\r\n    */\r\n  };\r\n\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    birthday: moment(),\r\n    dependency: '',\r\n  })\r\n\r\n  const [formValid, setFormValid] = useState(false)\r\n\r\n  const submitProps = {\r\n    className: \"send-btn\",\r\n    variant: \"contained\",\r\n    color: \"primary\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const pageSize = -1\r\n      const { data: { data: { data } } } = await DependencyService.all(null, pageSize)\r\n      console.log(data)\r\n      const dependencies = data.map(\r\n        ({name}) => ({value: name, text: name})\r\n      )\r\n      const roles = [\r\n        {value: 'student', text: 'Estudiante'}, \r\n        {value: 'teacher', text: 'Profesor'}, \r\n        {value: 'intern', text: 'Pasante'}\r\n      ]\r\n      \r\n      setOptions({'dependency': dependencies, 'rol': roles})\r\n      setValues({...values, dependency: dependencies[0].value, rol: roles[0].value})\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const submitCallback = (e) => {\r\n    e.preventDefault()\r\n\r\n    const body = {\r\n      email: values.email,\r\n      password: values.password,\r\n      password_confirmation: values.password,\r\n      fullName: values.firstName,\r\n      birthday: values.birthday.format(DATE_FORMAT),\r\n    }\r\n\r\n    UserService.create({body})\r\n    .then(() => {\r\n      enqueueSnackbar(SIGNUP_SUCCESS.message, SIGNUP_SUCCESS.props);\r\n      history.push('/login')\r\n    })\r\n    .catch(e => {\r\n      //TODO Error Handling\r\n      console.error(e)\r\n    })\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"paper-container\">\r\n      <Paper className=\"paper-form login-form\">\r\n        <img className=\"logo\" src={ciensLogo} alt=\"\"/>\r\n        <Form\r\n          structure={structure} \r\n          onSubmitCallback={submitCallback} \r\n          values={values} \r\n          setValues={setValues}\r\n          formValid={formValid}\r\n          setFormValid={setFormValid}\r\n          submitText=\"Registrar\"\r\n          submitProps={submitProps}\r\n        >\r\n          <Link className={cx('default-link', 'link')} to='login'>Ya posee una cuenta?</Link>\r\n          <Link className={cx('default-link', 'link')} to='forgot'>Olvido su contraseña?</Link>\r\n        </Form>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\login\\index.jsx",["141","142"],"import Cookies from 'universal-cookie'\r\nimport { useState, useRef } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Paper } from '@material-ui/core'\r\nimport { Form } from '../../components/Form'\r\nimport UserService from '../../services/User'\r\nimport CiensLogo from '../../assets/ciens.png'\r\nimport { useUserStore } from '../../store'\r\nimport { setToken } from '../../axiosConfig'\r\nimport { ACCESS_TOKEN_KEY } from '../../utils/static'\r\nimport classnames from 'classnames/bind'\r\nimport styles from './styles.scss'\r\n\r\nconst cx = classnames.bind(styles)\r\n\r\nexport const Login = () => {\r\n  const history = useHistory()\r\n\r\n  const structure = {\r\n    username:{\r\n      type: 'text',\r\n      label: 'Correo Electrónico',\r\n      constraints: {\r\n        required: true,\r\n        regex1: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \r\n      },\r\n      errors: {\r\n        required: 'El campo correo es requerido',\r\n        regex1: 'El correo no tiene un formato válido'\r\n      }\r\n    },\r\n    password:{\r\n      type: 'password',\r\n      label: 'Contraseña',\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo contraseña es requerido',\r\n      }\r\n    },\r\n  }\r\n\r\n  const [formValid, setFormValid] = useState(false)\r\n\r\n\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const submitProps = {\r\n    className: \"send-btn\",\r\n    variant: \"contained\",\r\n    color: \"primary\"\r\n  }\r\n\r\n  const setUser = useUserStore((state) => state.setUser)\r\n\r\n  const submitCallback = (e) => {\r\n    e.preventDefault();\r\n    const valid = ref.current.formValid();\r\n    if(!valid)return;\r\n    UserService.login(values)\r\n    .then(({data: {access_token}}) => {\r\n      setToken(access_token)\r\n      setUser({\r\n        email: values.username,\r\n        token: access_token,\r\n      })\r\n      //const cookies = new Cookies();\r\n      //cookies.set(ACCESS_TOKEN_KEY, access_token, { path: '/' });\r\n      history.push('/events');\r\n    })\r\n    .catch(e => console.error(e))\r\n  }\r\n\r\n  const ref = useRef()\r\n\r\n  return (\r\n    <div className={cx('paper-container')}>\r\n      <Paper className={cx('paper-form', 'login-form')}>\r\n        <img className={cx('logo')} src={CiensLogo} alt=\"logo-ucv\"/>\r\n        <Form\r\n          structure={structure} \r\n          onSubmitCallback={submitCallback} \r\n          values={values} \r\n          setValues={setValues}\r\n          formValid={formValid}\r\n          setFormValid={setFormValid}\r\n          submitText=\"Iniciar Sesión\"\r\n          submitProps={submitProps}\r\n          ref={ref}\r\n        >\r\n          <Link className={cx('default-link', 'link')} to='signup'>\r\n            Aún no posee una cuenta?\r\n          </Link>\r\n          <Link className={cx('default-link', 'link')} to='forgot'>\r\n            Olvido su contraseña?\r\n          </Link>\r\n        </Form>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\events\\index.jsx",["143"],"import React from 'react'\r\nimport Test from '../../assets/test.jpg'\r\nimport { Event } from '../../components/Event'\r\nimport classnames from 'classnames/bind'\r\nimport styles from './styles.scss'\r\n\r\nconst cx = classnames.bind(styles)\r\n\r\nexport const Events = () => {\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      url: Test,\r\n      name: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\r\n      description: \"Pellentesque commodo luctus tortor ac dapibus. Donec fermentum nulla vel nisi rhoncus, eget cursus arcu mollis. In tristique rutrum sapien non sollicitudin. Nullam vel velit et erat rutrum semper vitae sit amet mauris. Aliquam egestas iaculis sapien consequat hendrerit. Sed placerat dolor id metus placerat, quis vulputate eros euismod. Duis porttitor eget nisl nec blandit. Nam consectetur cursus erat vitae euismod.\",\r\n    },\r\n    {\r\n      id: 2,\r\n      url: Test,\r\n      name: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\r\n      description: \"Pellentesque commodo luctus tortor ac dapibus. Donec fermentum nulla vel nisi rhoncus, eget cursus arcu mollis. In tristique rutrum sapien non sollicitudin. Nullam vel velit et erat rutrum semper vitae sit amet mauris. Aliquam egestas iaculis sapien consequat hendrerit. Sed placerat dolor id metus placerat, quis vulputate eros euismod. Duis porttitor eget nisl nec blandit. Nam consectetur cursus erat vitae euismod.\",\r\n    },\r\n    {\r\n      id: 3,\r\n      url: Test,\r\n      name: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\r\n      description: \"Pellentesque commodo luctus tortor ac dapibus. Donec fermentum nulla vel nisi rhoncus, eget cursus arcu mollis. In tristique rutrum sapien non sollicitudin. Nullam vel velit et erat rutrum semper vitae sit amet mauris. Aliquam egestas iaculis sapien consequat hendrerit. Sed placerat dolor id metus placerat, quis vulputate eros euismod. Duis porttitor eget nisl nec blandit. Nam consectetur cursus erat vitae euismod.\",\r\n    },\r\n    {\r\n      id: 4,\r\n      url: Test,\r\n      name: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\r\n      description: \"Pellentesque commodo luctus tortor ac dapibus. Donec fermentum nulla vel nisi rhoncus, eget cursus arcu mollis. In tristique rutrum sapien non sollicitudin. Nullam vel velit et erat rutrum semper vitae sit amet mauris. Aliquam egestas iaculis sapien consequat hendrerit. Sed placerat dolor id metus placerat, quis vulputate eros euismod. Duis porttitor eget nisl nec blandit. Nam consectetur cursus erat vitae euismod.\",\r\n    },\r\n    {\r\n      id: 5,\r\n      url: Test,\r\n      name: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\r\n      description: \"Pellentesque commodo luctus tortor ac dapibus. Donec fermentum nulla vel nisi rhoncus, eget cursus arcu mollis. In tristique rutrum sapien non sollicitudin. Nullam vel velit et erat rutrum semper vitae sit amet mauris. Aliquam egestas iaculis sapien consequat hendrerit. Sed placerat dolor id metus placerat, quis vulputate eros euismod. Duis porttitor eget nisl nec blandit. Nam consectetur cursus erat vitae euismod.\",\r\n    },\r\n  ]\r\n  \r\n  const events = data.map(event => \r\n    <Event \r\n      key={event.id}\r\n      url={event.url}\r\n      name={event.name}\r\n      description={event.description}\r\n    >\r\n    </Event>\r\n  )\r\n  \r\n  return (\r\n    <div className=\"bg-white main-container\" maxWidth=\"lg\">      \r\n      {events}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\home\\index.jsx",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\forgot\\index.jsx",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\main\\index.jsx",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\services\\Dependency.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\services\\EventType.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\services\\User.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\Form.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\utils\\static.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\Event.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\axiosConfig.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\oauthConfig.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\Input.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\inputs\\RepeatableFormField.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\inputs\\Password.js",["144"],"import { useState, useEffect } from 'react';\r\nimport { FormControl, Input as MaterialInput, InputLabel  } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport const Password = ({id, key, label, errors, constraints, errorState, confirm, ...attr}) => {\r\n  const [ showPassword, setShowPassword ] = useState(false);\r\n\r\n  const [ confirmField, setConfirmField ] = useState(\"\");\r\n\r\n  const [ confirmFieldError, setConfirmFieldError ] = useState(false);\r\n\r\n  const confirmChange = (event) => {\r\n    setConfirmFieldError( attr.value !== event.target.value ? true : false );\r\n    setConfirmField(event.target.value);\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(confirm)setConfirmFieldError( attr.value !== confirmField );\r\n  }, [attr.value]);\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={`container-form ${errorState?'ext-error':''}`}>\r\n        <InputLabel htmlFor=\"ext-password\">\r\n          { label }\r\n          { constraints?.required === true &&\r\n            <span aria-hidden=\"true\" className=\"MuiFormLabel-asterisk MuiInputLabel-asterisk\"> *</span>\r\n          }\r\n        </InputLabel>\r\n        <MaterialInput\r\n          type={showPassword ? 'text' : 'password'}\r\n          {...attr}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n              >\r\n                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <div className=\"ext-error\">{errors?.[errorState]}</div>\r\n      </FormControl>\r\n      { confirm &&\r\n        <FormControl className={`container-form ${confirmFieldError?'ext-error':''}`}>\r\n          <InputLabel htmlFor=\"ext-confirm-password\">\r\n            { confirm.label }\r\n            <span aria-hidden=\"true\" className=\"MuiFormLabel-asterisk MuiInputLabel-asterisk\"> *</span>\r\n          </InputLabel>\r\n          <MaterialInput \r\n            id={`ext-confirm-${attr.id}`}\r\n            type='password'\r\n            value={confirmField}\r\n            onChange={confirmChange}\r\n            onBlur={confirmChange}\r\n          />\r\n          { confirmFieldError === true && \r\n            <div className=\"ext-error\">{confirm.error}</div>\r\n          }\r\n        </FormControl>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\inputs\\DateInput.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\inputs\\Select.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\inputs\\Text.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\store\\index.js",[],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\components\\sidebar\\index.jsx",["145"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { IconButton, Button } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport classnames from 'classnames/bind'\r\nimport styles from './styles.scss'\r\n\r\nconst cx = classnames.bind(styles)\r\n\r\nexport const Sidebar = ({items, sidebarState, setSidebarState}) => {\r\n  const list = items.map(({id, link, name, onClick = null}) => \r\n    <li key={id}>\r\n      <Link className=\"default-link\" to={link}>\r\n        <Button onClick={onClick}>{name}</Button>\r\n      </Link>\r\n    </li>\r\n  );\r\n\r\n  return (\r\n    <div className={`sidebar ${ sidebarState ? 'active' : '' }`}>\r\n      <div className=\"sidebar-container\">\r\n        <div className=\"close-btn\">\r\n          <IconButton onClick={() => setSidebarState(false)} aria-label=\"menu\" size=\"medium\">\r\n            <CloseIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n        </div>\r\n        <ul className=\"items\">{list}</ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\hooks\\logout.js",["146"],"import React from 'react'\r\nimport { useUserStore } from '../store'\r\nimport { useHistory } from 'react-router-dom'\r\nimport UserService from '../services/User'\r\n\r\nexport const useLogout = () => {\r\n    const history = useHistory();\r\n    const clearUser = useUserStore((state) => state.clearUser)\r\n\r\n    const logout = () => UserService.logout().then(() => {\r\n        clearUser()\r\n        history.push('/login')\r\n    }).catch(\r\n        history.push('/login')\r\n    )\r\n    return { logout }\r\n}\r\n","C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\admin\\eventTypes\\list\\index.jsx",["147","148","149","150"],"C:\\Users\\s_tmi\\Documents\\Github\\tesisfront\\src\\views\\admin\\dependencies\\list\\index.jsx",["151","152","153","154","155"],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":14},{"ruleId":"160","severity":1,"message":"164","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":25,"column":6,"nodeType":"167","endLine":25,"endColumn":8,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":142,"column":6,"nodeType":"167","endLine":142,"endColumn":8,"suggestions":"170"},{"ruleId":"160","severity":1,"message":"171","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":15},{"ruleId":"160","severity":1,"message":"172","line":10,"column":10,"nodeType":"162","messageId":"163","endLine":10,"endColumn":26},{"ruleId":"160","severity":1,"message":"173","line":7,"column":7,"nodeType":"162","messageId":"163","endLine":7,"endColumn":9},{"ruleId":"165","severity":1,"message":"174","line":30,"column":6,"nodeType":"167","endLine":30,"endColumn":18,"suggestions":"175"},{"ruleId":"160","severity":1,"message":"173","line":8,"column":7,"nodeType":"162","messageId":"163","endLine":8,"endColumn":9},{"ruleId":"160","severity":1,"message":"176","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"160","severity":1,"message":"177","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":43},{"ruleId":"160","severity":1,"message":"178","line":38,"column":10,"nodeType":"162","messageId":"163","endLine":38,"endColumn":20},{"ruleId":"160","severity":1,"message":"179","line":40,"column":9,"nodeType":"162","messageId":"163","endLine":40,"endColumn":16},{"ruleId":"160","severity":1,"message":"180","line":57,"column":9,"nodeType":"162","messageId":"163","endLine":57,"endColumn":14},{"ruleId":"160","severity":1,"message":"173","line":7,"column":7,"nodeType":"162","messageId":"163","endLine":7,"endColumn":9},{"ruleId":"160","severity":1,"message":"179","line":12,"column":9,"nodeType":"162","messageId":"163","endLine":12,"endColumn":16},{"ruleId":"160","severity":1,"message":"181","line":18,"column":9,"nodeType":"162","messageId":"163","endLine":18,"endColumn":17},{"ruleId":"160","severity":1,"message":"180","line":53,"column":9,"nodeType":"162","messageId":"163","endLine":53,"endColumn":14},{"ruleId":"160","severity":1,"message":"182","line":65,"column":9,"nodeType":"162","messageId":"163","endLine":65,"endColumn":21},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'create' is defined but never used.","Identifier","unusedVar","'produce' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["185"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["186"],"'Cookies' is defined but never used.","'ACCESS_TOKEN_KEY' is defined but never used.","'cx' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'confirm' and 'confirmField'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setConfirmFieldError' needs the current value of 'confirmField'.",["187"],"'React' is defined but never used.","'MuiThemeProvider' is defined but never used.","'eventTypes' is assigned a value but never used.","'columns' is assigned a value but never used.","'theme' is assigned a value but never used.","'editable' is assigned a value but never used.","'dataCallback' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [id]",{"range":"194","text":"195"},"Update the dependencies array to be: [values]",{"range":"196","text":"197"},"Update the dependencies array to be: [attr.value, confirm, confirmField]",{"range":"198","text":"199"},[939,941],"[id]",[3740,3742],"[values]",[1109,1121],"[attr.value, confirm, confirmField]"]
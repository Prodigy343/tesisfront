[{"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\index.js":"1","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\reportWebVitals.js":"2","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\App.js":"3","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Login.js":"4","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Forgot.js":"5","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Signup.js":"6","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\Form.js":"7","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Main.js":"8","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\Sidebar.js":"9","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\Context.js":"10","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Home.js":"11","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\Event.js":"12","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\Input.js":"13","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Events.js":"14","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\admin\\dependencies\\List.js":"15","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\axiosConfig.js":"16","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\services\\Dependency.js":"17","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\admin\\eventTypes\\List.js":"18","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\admin\\eventTypes\\Edit.js":"19","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\admin\\eventTypes\\Create.js":"20","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\services\\EventType.js":"21","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\inputs\\Select.js":"22","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\inputs\\Text.js":"23","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\inputs\\Password.js":"24","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\inputs\\RepeatableFormField.js":"25","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Profile.js":"26","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\services\\User.js":"27","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\inputs\\DateInput.js":"28","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\utils\\static.js":"29","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\Alert.js":"30","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\oauthConfig.js":"31"},{"size":534,"mtime":1612815446299,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":2088,"mtime":1626072859505,"results":"35","hashOfConfig":"33"},{"size":2518,"mtime":1626072787534,"results":"36","hashOfConfig":"33"},{"size":1904,"mtime":1626072709583,"results":"37","hashOfConfig":"33"},{"size":4774,"mtime":1626053306220,"results":"38","hashOfConfig":"33"},{"size":2708,"mtime":1626072702915,"results":"39","hashOfConfig":"33"},{"size":1727,"mtime":1614053248824,"results":"40","hashOfConfig":"33"},{"size":852,"mtime":1611458459130,"results":"41","hashOfConfig":"33"},{"size":441,"mtime":1610931857526,"results":"42","hashOfConfig":"33"},{"size":109,"mtime":1610935478476,"results":"43","hashOfConfig":"33"},{"size":1709,"mtime":1611458095892,"results":"44","hashOfConfig":"33"},{"size":675,"mtime":1624814371073,"results":"45","hashOfConfig":"33"},{"size":3285,"mtime":1612719435130,"results":"46","hashOfConfig":"33"},{"size":2828,"mtime":1624812503731,"results":"47","hashOfConfig":"33"},{"size":273,"mtime":1612819661917,"results":"48","hashOfConfig":"33"},{"size":768,"mtime":1624812532808,"results":"49","hashOfConfig":"33"},{"size":2699,"mtime":1613786424580,"results":"50","hashOfConfig":"33"},{"size":4816,"mtime":1626043291634,"results":"51","hashOfConfig":"33"},{"size":4419,"mtime":1614053341318,"results":"52","hashOfConfig":"33"},{"size":756,"mtime":1614053280909,"results":"53","hashOfConfig":"33"},{"size":692,"mtime":1615910739723,"results":"54","hashOfConfig":"33"},{"size":395,"mtime":1624837749543,"results":"55","hashOfConfig":"33"},{"size":2816,"mtime":1615913526238,"results":"56","hashOfConfig":"33"},{"size":1222,"mtime":1613105257229,"results":"57","hashOfConfig":"33"},{"size":119,"mtime":1614053513006,"results":"58","hashOfConfig":"33"},{"size":1235,"mtime":1626071914955,"results":"59","hashOfConfig":"33"},{"size":1022,"mtime":1626044632055,"results":"60","hashOfConfig":"33"},{"size":265,"mtime":1626072579059,"results":"61","hashOfConfig":"33"},{"size":490,"mtime":1626046420698,"results":"62","hashOfConfig":"33"},{"size":322,"mtime":1626068757195,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1bkfat6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\index.js",[],["130","131"],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\reportWebVitals.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\App.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Login.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Forgot.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Signup.js",["132"],"import { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Paper } from '@material-ui/core';\r\nimport { SIGNUP_SUCCESS } from '../utils/static';\r\nimport { Form } from '../components/Form';\r\nimport ciensLogo from '../assets/ciens.png';\r\nimport UserService from '../services/User';\r\nimport { DATE_FORMAT } from '../utils/static';\r\nimport moment from 'moment';\r\nimport DependencyService from '../services/Dependency';\r\n\r\nexport const Signup = () => {\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  let [options, setOptions] = useState({dependency: [], rol: []});\r\n\r\n  const structure = {\r\n    email:{\r\n      type: 'text',\r\n      label: 'Correo Electrónico',\r\n      constraints: {\r\n        required: true,\r\n        regex1: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \r\n      },\r\n      errors: {\r\n        required: 'El campo correo es requerido',\r\n        regex1: 'El correo no tiene un formato válido'\r\n      }\r\n    },\r\n    password:{\r\n      type: 'password',\r\n      label: 'Contraseña',\r\n      confirm: {\r\n        label: 'Confirmar Contraseña',\r\n        error: 'El campo es distinto al campo contraseña'\r\n      },\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo contraseña es requerido',\r\n      }\r\n    },\r\n    firstName:{\r\n      type: 'text',\r\n      label: 'Nombres',\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo nombres es requerido',\r\n      }\r\n    },\r\n    lastName:{\r\n      type: 'text',\r\n      label: 'Apellidos',\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo apellidos es requerido',\r\n      }\r\n    },\r\n    dependency:{\r\n      type: 'select',\r\n      label: 'Dependencia',\r\n      options: options.dependency,\r\n    },\r\n    rol:{\r\n      type: 'select',\r\n      label: 'Rol',\r\n      options: options.rol,\r\n    },\r\n    birthday:{\r\n      type: 'date',\r\n      label: 'Fecha de Nacimiento'\r\n    }\r\n    /*\r\n    phone:{\r\n      type: 'text',\r\n      label: 'Teléfono',\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo teléfono es requerido',\r\n      }\r\n    },\r\n    id:{\r\n      type: 'text',\r\n      label: 'Cedula de Identidad',\r\n      constraints: {\r\n        required: true,\r\n      },\r\n      errors: {\r\n        required: 'El campo cédula es requerido',\r\n      }\r\n    },\r\n    */\r\n  };\r\n\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    birthday: moment(),\r\n    dependency: '',\r\n    rol: '',\r\n  });\r\n\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  const submitProps = {\r\n    className: \"send-btn\",\r\n    variant: \"contained\",\r\n    color: \"primary\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const {data: {data}} = await DependencyService.all();\r\n      const dependencies = data.map(({_id, name}) => ({value: _id, text: name}));\r\n      const roles = [{value: 'student', text: 'Estudiante'}, {value: 'teacher', text: 'Profesor'}, {value: 'intern', text: 'Pasante'}];\r\n      \r\n      setOptions({'dependency': dependencies, 'rol': roles});\r\n      setValues({...values, dependency: dependencies[0].value, rol: roles[0].value});\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const submitCallback = (e) => {\r\n    e.preventDefault()\r\n\r\n    const body = {\r\n      email: values.email,\r\n      password: values.password,\r\n      password_confirmation: values.password,\r\n      fullName: values.firstName,\r\n      birthday: values.birthday.format(DATE_FORMAT),\r\n      rol: values.rol\r\n    }\r\n\r\n    UserService.create({body})\r\n    .then(() => {\r\n      enqueueSnackbar(SIGNUP_SUCCESS.message, SIGNUP_SUCCESS.props);\r\n      history.push('/login');\r\n    })\r\n    .catch(e => {\r\n      //TODO Error Handling\r\n      console.error(e);\r\n    })\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"paper-container\">\r\n      <Paper className=\"paper-form login-form\">\r\n        <img className=\"logo\" src={ciensLogo} alt=\"\"/>\r\n        <Form \r\n          structure={structure} \r\n          onSubmitCallback={submitCallback} \r\n          values={values} \r\n          setValues={setValues}\r\n          formValid={formValid}\r\n          setFormValid={setFormValid}\r\n          submitText=\"Registrar\"\r\n          submitProps={submitProps}\r\n        >\r\n          <Link className=\"default-link\" to='login'>Ya posee una cuenta?</Link>\r\n          <Link className=\"default-link\" to='forgot'>Olvido su contraseña?</Link>\r\n        </Form>\r\n      </Paper>\r\n    </div>\r\n  )\r\n};\r\n","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\Form.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Main.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\Sidebar.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\Context.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Home.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\Event.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\Input.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Events.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\admin\\dependencies\\List.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\axiosConfig.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\services\\Dependency.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\admin\\eventTypes\\List.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\admin\\eventTypes\\Edit.js",["133"],"import { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormControl, InputLabel, Select as MaterialSelect, MenuItem, TextField, IconButton } from '@material-ui/core';\r\nimport { DeleteOutlined as DeleteOutlinedIcon } from '@material-ui/icons';\r\nimport EventTypeService from '../../../services/EventType';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport const Edit = ({location: {state: {id}}}) => {\r\n  const history = useHistory();\r\n  const [inputList, setInputList] = useState([{ label: \"\", type: \"\" }]);\r\n  const [eventTypeName, setEventTypeName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const {data: {data: {name, fields}}} = await EventTypeService.getById({id});\r\n      setEventTypeName(name);\r\n      setInputList(fields);\r\n    }\r\n    fetchData();\r\n    return () => {\r\n      setEventTypeName(\"\");\r\n      setInputList([]);\r\n    }\r\n  }, []);\r\n \r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n \r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = index => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n \r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { label: \"\", type: \"\" }]);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    const { value } = e.target;\r\n    setEventTypeName(value);\r\n  }\r\n\r\n  const options = [\r\n    {value: 'text', text: 'Texto'},\r\n    {value: 'date', text: 'Fecha'},\r\n    {value: 'number', text: 'Numerico'},\r\n    {value: 'textarea', text: 'Area de texto'},\r\n    {value: 'file', text: 'Archivo'},\r\n  ];\r\n\r\n  const selectOptions = options.map(({value, text}) => {\r\n    return <MenuItem value={value}>{text}</MenuItem>;\r\n  });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(!eventTypeName)return;\r\n\r\n    const body = {\r\n      data: {\r\n        name: eventTypeName,\r\n        fields: inputList\r\n      }\r\n    };\r\n\r\n    EventTypeService.update({id, body: body})\r\n    .then(() => {\r\n      history.push('/event-type-list');\r\n    })\r\n    .catch(e => {\r\n      console.error(e);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form-container-full custom-width text-left\" onSubmit={onSubmit}>\r\n        <div className=\"head-section\">\r\n          <div className=\"title-head\">Crear Tipo de Evento</div>\r\n          <div className=\"options\">\r\n            <Button variant=\"contained\" onClick={handleAddClick}>Agregar campo</Button>\r\n            <Button className=\"ml-2\" variant=\"contained\" onClick={handleAddClick}>Previsualización</Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"info\">\r\n            El siguiente campo indicará el nombre del tipo de evento.\r\n          </div>\r\n          <FormControl className=\"container-form container-full\">\r\n            <TextField name=\"event-type-name\" value={eventTypeName} onChange={handleNameChange} placeholder=\"Ingrese el nombre del tipo de evento\" label=\"Nombre\"/>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"info pt-30\">\r\n            Debe indicar cuales son los campos y sus respectivos nombres que desean que tenga el tipo de evento.\r\n          </div>\r\n        </div>\r\n\r\n        {inputList.map((x, i) => {\r\n          return (\r\n            <div className=\"row row-list\">\r\n              <div className=\"fields\">\r\n                <FormControl className=\"container-form container-half\">\r\n                  <TextField name=\"label\" value={x.label} onChange={e => handleInputChange(e, i)} placeholder=\"Ingrese el label\" label=\"Label\"/>\r\n                </FormControl>\r\n                <FormControl className=\"container-form container-half\">\r\n                  <InputLabel id={`select-${i}`}>Tipo de campo</InputLabel>\r\n                  <MaterialSelect labelId={`select-${i}`} name=\"type\" id={`${i}-select`} value={x.type} onChange={e => handleInputChange(e, i)}>\r\n                    {selectOptions}\r\n                  </MaterialSelect>\r\n                </FormControl>\r\n              </div>\r\n              \r\n              <div className=\"btn-box\">\r\n                {inputList.length !== 1 &&\r\n                  <IconButton className=\"black\" aria-label=\"delete\" onClick={() => handleRemoveClick(i)}>\r\n                    <DeleteOutlinedIcon />\r\n                  </IconButton>  \r\n                }\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div className=\"row text-center p-5\">\r\n          <Button variant=\"contained\" type=\"submit\">Guardar cambios</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\admin\\eventTypes\\Create.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\services\\EventType.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\inputs\\Select.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\inputs\\Text.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\inputs\\Password.js",["134"],"import { useState, useEffect } from 'react';\r\nimport { FormControl, Input as MaterialInput, InputLabel  } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport const Password = ({id, key, label, errors, constraints, errorState, confirm, ...attr}) => {\r\n  const [ showPassword, setShowPassword ] = useState(false);\r\n\r\n  const [ confirmField, setConfirmField ] = useState(\"\");\r\n\r\n  const [ confirmFieldError, setConfirmFieldError ] = useState(false);\r\n\r\n  const confirmChange = (event) => {\r\n    setConfirmFieldError( attr.value !== event.target.value ? true : false );\r\n    setConfirmField(event.target.value);\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(confirm)setConfirmFieldError( attr.value !== confirmField );\r\n  }, [attr.value]);\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={`container-form ${errorState?'ext-error':''}`}>\r\n        <InputLabel htmlFor=\"ext-password\">\r\n          { label }\r\n          { constraints?.required === true &&\r\n            <span aria-hidden=\"true\" className=\"MuiFormLabel-asterisk MuiInputLabel-asterisk\"> *</span>\r\n          }\r\n        </InputLabel>\r\n        <MaterialInput\r\n          type={showPassword ? 'text' : 'password'}\r\n          {...attr}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n              >\r\n                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <div className=\"ext-error\">{errors?.[errorState]}</div>\r\n      </FormControl>\r\n      { confirm &&\r\n        <FormControl className={`container-form ${confirmFieldError?'ext-error':''}`}>\r\n          <InputLabel htmlFor=\"ext-confirm-password\">\r\n            { confirm.label }\r\n            <span aria-hidden=\"true\" className=\"MuiFormLabel-asterisk MuiInputLabel-asterisk\"> *</span>\r\n          </InputLabel>\r\n          <MaterialInput \r\n            id={`ext-confirm-${attr.id}`}\r\n            type='password'\r\n            value={confirmField}\r\n            onChange={confirmChange}\r\n            onBlur={confirmChange}\r\n          />\r\n          { confirmFieldError === true && \r\n            <div className=\"ext-error\">{confirm.error}</div>\r\n          }\r\n        </FormControl>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\inputs\\RepeatableFormField.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\views\\Profile.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\services\\User.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\inputs\\DateInput.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\utils\\static.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\components\\Alert.js",[],"C:\\Users\\Usuario\\Documents\\Workstation\\Local\\React\\eventgest\\src\\oauthConfig.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":131,"column":6,"nodeType":"141","endLine":131,"endColumn":8,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":25,"column":6,"nodeType":"141","endLine":25,"endColumn":8,"suggestions":"144"},{"ruleId":"139","severity":1,"message":"145","line":30,"column":6,"nodeType":"141","endLine":30,"endColumn":18,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["149"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["150"],"React Hook useEffect has missing dependencies: 'confirm' and 'confirmField'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setConfirmFieldError' needs the current value of 'confirmField'.",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [values]",{"range":"158","text":"159"},"Update the dependencies array to be: [id]",{"range":"160","text":"161"},"Update the dependencies array to be: [attr.value, confirm, confirmField]",{"range":"162","text":"163"},[3506,3508],"[values]",[939,941],"[id]",[1109,1121],"[attr.value, confirm, confirmField]"]